assault$regiony[i] = floor(reg)
}
#normalize longitude and store as regionx 1 through 10
for (i in 1:length(assault$longitude)){
reg = ((assault$longitude[i]-minlong)/(maxlong-minlong))*10
assault$regionx[i] = floor(reg)
}
#create region from regionx and region y
#region should be from 1 to 100 and as (y-1)*10+x (row major)
for (i in 1:length(assault$regionx)){
assault$region[i]= assault$regionx[i]+(assault$regiony[i]-1)*10
}
summary(assault$region)
summary(assault$regiony)
summary(assault$regionx)
#normalize latitude and store as regiony 0 through 9
for (i in 1:length(assault$latitude)){
reg = ((assault$latitude[i]-minlat)/(maxlat-minlat))*9
assault$regiony[i] = floor(reg)
}
summary(assault$regiony)
#normalize longitude and store as regionx 1 through 10
for (i in 1:length(assault$longitude)){
reg = ((assault$longitude[i]-minlong)/(maxlong-minlong))*9+1
assault$regionx[i] = floor(reg)
}
summary(assault$regionx)
#create region from regionx and region y
#region should be from 1 to 100 and as (y)*10+x (row major)
for (i in 1:length(assault$regionx)){
assault$region[i]= assault$regionx[i]+(assault$regiony[i])*10
}
summary(assault$region)
plot(assault$region)
bar(assault$region)
hist(assault$region)
plot(assault$region)
assault_counts = matrix(100, 7, 24)#region, day of the week, time of day
for (i in 1:100){
for (j in 1:7){
for(k in 1:24){
ix_region = which(assault$region == i)
ix_day=which(assault$reported_dayofwk == days_of_week[j])
ix_hour = which(assault$reported_hour==k-1)
assault_counts[i,j,k]=length(which(intersect(ix_region, intersect(ix_day, ix_hour))))
}
}
}
assault_counts = matrix(100, 7, 24)#region, day of the week, time of day
for (i in 1:100){
for (j in 1:7){
for(k in 1:24){
ix_region = which(assault$region == i)
ix_day=which(assault$reported_dayofwk == days_of_week[j])
ix_hour = which(assault$reported_hour==k-1)
count =length(intersect(ix_region, intersect(ix_day, ix_hour)))
assault_counts[i,j,k]=count
}
}
}
help(matrix)
assault_counts = matrix(0,c(100, 7, 24))#region, day of the week, time of day
for (i in 1:100){
for (j in 1:7){
for(k in 1:24){
ix_region = which(assault$region == i)
ix_day=which(assault$reported_dayofwk == days_of_week[j])
ix_hour = which(assault$reported_hour==k-1)
count =length(intersect(ix_region, intersect(ix_day, ix_hour)))
assault_counts[i,j,k]=count
}
}
}
dim(assault_counts)
help(rep)
assault_counts = array(rep(0,100*7*24),c(100, 7, 24))#region, day of the week, time of day
dim(assault_counts)
for (i in 1:100){
for (j in 1:7){
for(k in 1:24){
ix_region = which(assault$region == i)
ix_day=which(assault$reported_dayofwk == days_of_week[j])
ix_hour = which(assault$reported_hour==k-1)
count =length(intersect(ix_region, intersect(ix_day, ix_hour)))
assault_counts[i,j,k]=count
}
}
}
write.csv(assault_counts, file= "AssaultCounts.csv")
assault$reported_year
summary(assault$reported_year)
type()?
plot(assault$longitude, assault$latitude)
str(assault)
help(rep)
assault_counts
sum(assault_counts[1,:,5])
sum(assault_counts[1,,5])
sum(assault_counts[6,,5])
sum(assault_counts[50,,5])
sum(assault_counts[,2,5])
sum(assault_counts[,7,5])
sum(assault_counts[,7,60])
sum(assault_counts[,7,20])
assault_counts(50, 3, 15)
assault_counts[50, 3, 15]
assault_counts[50, 3, 19]
sum(assault_counts[, 3, 19])
plot(assault$regionx,assault$regiony)
assault_hotspot_indexes =intersect(which((assault$regionx==6||assault$regionx==7)),which((assault$regiony>=4&&assault$regiony<=7)))
assault_hotspot_indexes
which((assault$regionx==6||assault$regionx==7))
which(assault$regionx==6)
which(assault$regionx==7)
assault_hotspot_indexes =intersect(which((assault$regionx==6|assault$regionx==7)),which((assault$regiony>=4&assault$regiony<=7)))
assault_hotspot_indexes
length(assault_hotspot_indexes)
assault_hotspot_indexes =intersect(which((assault$regionx==6|assault$regionx==7)),which((assault$regiony>=5&assault$regiony<=7)))
length(assault_hotspot_indexes)
assault_hotspot = assault[assault_hotspot_indexes,]
head(assault_hotspot)
summary(assault_hotspot$district)
summary(assault)
summary(assault_hotspot$district)
summary(assault$district)
assault_hotspot_indexes =intersect(which((assault$regionx>=5&assault$regionx<=7)),which((assault$regiony>=5&assault$regiony<=7)))
summary(assault_hotspot$district)
assault_hotspot_indexes =intersect(which((assault$regionx>=5&assault$regionx<=7)),which((assault$regiony>=5&assault$regiony<=7)))
summary(assault_hotspot$district)
plot(assault$longitude, assault$latitude)
help hold
help(hold)
help(+)
help(plot())
help(plot
help(plot)
help(plot)
se = assault[which(assaults$district=='Southeast'),]
d = assault[which(assaults$district=='Downtown'),]
n = assault[which(assaults$district=='Southeast'),]
ne = assault[which(assaults$district=='Southeast'),]
nw = assault[which(assaults$district=='Southeast'),]
sw = assault[which(assaults$district=='Southeast'),]
plot(se$longitude, se$latitude)
points(d$longitude, d$latitude, color='g')
se = assault[which(assault$district=='Southeast'),]
d = assault[which(assault$district=='Downtown'),]
n = assault[which(assault$district=='Southeast'),]
ne = assault[which(assault$district=='Southeast'),]
nw = assault[which(assault$district=='Southeast'),]
sw = assault[which(assault$district=='Southeast'),]
plot(se$longitude, se$latitude)
points(d$longitude, d$latitude, color='g')
plot(se$longitude, se$latitude)
points(d$longitude, d$latitude, col='g')
plot(se$longitude, se$latitude)
points(d$longitude, d$latitude, col='green')
plot(se$longitude, se$latitude, col ='lb')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='purple')
points(sw$longitude, sw$latitude, col='orange')
plot(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='purple')
points(sw$longitude, sw$latitude, col='orange')
se = assault[which(assault$district=='Southeast'),]
d = assault[which(assault$district=='Downtown'),]
n = assault[which(assault$district=='North'),]
ne = assault[which(assault$district=='Northeast'),]
nw = assault[which(assault$district=='NorthWest'),]
sw = assault[which(assault$district=='Southwest'),]
plot(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='purple')
points(sw$longitude, sw$latitude, col='orange')
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='purple')
points(sw$longitude, sw$latitude, col='orange')
summary(assault$district)
points(nw$longitude, nw$latitude, col='gray')
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='gray')
points(sw$longitude, sw$latitude, col='orange')
dim(sw)
points(nw$longitude, nw$latitude, col='red')
dim(nw)
nw
which(assault$district=='Northwest')
length(which(assault$district=='Northwest'))
assault[which(assault$district=='Northwest'),]
nw
nw = assault[which(assault$district=='NorthWest'),]
dim(nw)
assault[which(assault$district=='NorthWest'),]
which(assault$district=='Northwest')
assault[which(assault$district=='NorthWest'),]
ne
which(assault$district=='Northwest')
assault[which(assault$district=='NorthWest'),]
nw = assault[which(assault$district=='Northwest'),]
nw
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='gray')
points(sw$longitude, sw$latitude, col='orange')
se = assault_hotspot[which(assault_hotspot$district=='Southeast'),]
d = assault_hotspot[which(assault_hotspot$district=='Downtown'),]
n = assault_hotspot[which(assault_hotspot$district=='North'),]
ne = assault_hotspot[which(assault_hotspot$district=='Northeast'),]
nw = assault_hotspot[which(assault_hotspot$district=='Northwest'),]
sw = assault_hotspot[which(assault_hotspot$district=='Southwest'),]
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='gray')
points(sw$longitude, sw$latitude, col='orange')
assault_hotspot_indexes =intersect(which((assault$regionx>=6&assault$regionx<=7)),which((assault$regiony>=4&assault$regiony<=6)))
assault_hotspot = assault[assault_hotspot_indexes,]
#only in hotspot region
se = assault_hotspot[which(assault_hotspot$district=='Southeast'),]
d = assault_hotspot[which(assault_hotspot$district=='Downtown'),]
n = assault_hotspot[which(assault_hotspot$district=='North'),]
ne = assault_hotspot[which(assault_hotspot$district=='Northeast'),]
nw = assault_hotspot[which(assault_hotspot$district=='Northwest'),]
sw = assault_hotspot[which(assault_hotspot$district=='Southwest'),]
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='gray')
points(sw$longitude, sw$latitude, col='orange')
summary(assault_hotspot$district)
assault_hotspot_indexes =intersect(which((assault$regionx>=6&assault$regionx<=7)),which((assault$regiony>=5&assault$regiony<=7)))
assault_hotspot = assault[assault_hotspot_indexes,]
#only in hotspot region
se = assault_hotspot[which(assault_hotspot$district=='Southeast'),]
d = assault_hotspot[which(assault_hotspot$district=='Downtown'),]
n = assault_hotspot[which(assault_hotspot$district=='North'),]
ne = assault_hotspot[which(assault_hotspot$district=='Northeast'),]
nw = assault_hotspot[which(assault_hotspot$district=='Northwest'),]
sw = assault_hotspot[which(assault_hotspot$district=='Southwest'),]
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='gray')
points(sw$longitude, sw$latitude, col='orange')
assault_hotspot_indexes =intersect(which((assault$regionx>=6&assault$regionx<=7)),which((assault$regiony>=3&assault$regiony<=5)))
assault_hotspot = assault[assault_hotspot_indexes,]
#only in hotspot region
se = assault_hotspot[which(assault_hotspot$district=='Southeast'),]
d = assault_hotspot[which(assault_hotspot$district=='Downtown'),]
n = assault_hotspot[which(assault_hotspot$district=='North'),]
ne = assault_hotspot[which(assault_hotspot$district=='Northeast'),]
nw = assault_hotspot[which(assault_hotspot$district=='Northwest'),]
sw = assault_hotspot[which(assault_hotspot$district=='Southwest'),]
plot(assault$longitude, assault$latitude)
points(se$longitude, se$latitude, col ='light blue')
points(d$longitude, d$latitude, col='green')
points(n$longitude, n$latitude, col='blue')
points(ne$longitude, ne$latitude, col='red')
points(nw$longitude, nw$latitude, col='gray')
points(sw$longitude, sw$latitude, col='orange')
for (i in 0:9){
abline(v=(maxlat-minlat)*i/9 +minlat, col='black')
abline(v=(maxlong-minlong)*i/9 +minlong, col='black')
}
for (i in 0:9){
abline(v=(maxlat-minlat)*i/9 +minlat, col='black')
abline(h=(maxlong-minlong)*i/9 +minlong, col='black')
}
for (i in 0:9){
abline(h=(maxlat-minlat)*i/9 +minlat, col='black')
abline(v=(maxlong-minlong)*i/9 +minlong, col='black')
}
help(ggmap)
help(ggmap())
library("ggmap")
help(byrow)
#------------------------------------------Heatmap
model= read.csv("F://Rprojects/RaleighCrime/10x10 assault model.csv", header = FALSE)
matrix(model[,1], 10,10, byrow=TRUE)
image(matrix(model[,1], 10,10, byrow=TRUE))
u1=matrix(model[,1], 10,10, byrow=TRUE)
u1=matrix.flip(u1)
u1=matrix.rotate(u1,90)
u1=matrix(model[,1], 10,10, byrow=TRUE)
u1=flip.matrix(u1)
u1=rotate.matrix(u1,90)
u1
flip.matrix(u1)
help(flip)
help(flip.matrix)
u1=mirror.matrix(u1)
u1=u1[10:1,]
image(u1)
u1=rotate90.matrix(u1,90)
u1=rotate270.matrix(u1,90)
rotate <- function(x) t(apply(x, 2, rev))
rotate(u1)
image(u1)
rotate <- function(x) t(apply(x, 2, rev))
u1=rotate(u1)
image(u1)
u1min = min(u1)
u1max = max(u1)
seq(u1min, u1maax, 10)
cc<-colorRampPalatte(c('blue', 'red'))(10)
cc<-colorRampPalette(c('blue', 'red'))(10)
seq(u1min, u1max, 10)
cc<-colorRampPalette(c('blue', 'red'))(10)
seq(u1min, u1max, length.out=10)
u1=matrix(model[,1], 10,10, byrow=TRUE)
u1=u1[10:1,]
rotate <- function(x) t(apply(x, 2, rev))
u1=rotate(u1)
image(u1)
u1min = min(u1)
u1max = max(u1)
ubins=seq(u1min, u1max, length.out=10)
cc<-colorRampPalette(c('blue', 'red'))(10)
colors= c()
colors=cc[10]
colors[which(u1<ubins[9]),]=cc[9]
colors[which(u1<ubins[8]),]=cc[8]
colors[which(u1<ubins[9])]=cc[9]
colors[which(u1<ubins[8])]=cc[8]
colors[which(u1<ubins[9])]=cc[9]
colors[which(u1<ubins[8])]=cc[8]
colors[which(u1<ubins[7])]=cc[7]
colors[which(u1<ubins[6])]=cc[6]
colors[which(u1<ubins[5])]=cc[5]
colors[which(u1<ubins[4])]=cc[4]
colors[which(u1<ubins[3])]=cc[3]
colors[which(u1<ubins[2])]=cc[2]
colors[which(u1<ubins[1])]=cc[1]
plot(assault$longitude, assault$latitude, col = colors)
colors= [c(), c()]
colors= matrix(0, 10,10)
colors=cc[10]
colors[which(u1<ubins[9])]=cc[9]
colors[which(u1<ubins[8])]=cc[8]
colors[which(u1<ubins[7])]=cc[7]
colors[which(u1<ubins[6])]=cc[6]
colors[which(u1<ubins[5])]=cc[5]
colors[which(u1<ubins[4])]=cc[4]
colors[which(u1<ubins[3])]=cc[3]
colors[which(u1<ubins[2])]=cc[2]
colors[which(u1<ubins[1])]=cc[1]
plot(assault$longitude, assault$latitude, col = colors)
str(assault)
head(assault$crime_description)
head(assault$GlobalID)
head(assault$OBJECTID)
head(assault$case_number)
# binning the lat, long.
assault$regionx = 0
assault$regiony = 0
assault$region =0
minlat = min(assault$latitude)
maxlat = max(assault$latitude)
minlong = min(assault$longitude)
maxlong = max(assault$longitude)
#normalize latitude and store as regiony 0 through 24
for (i in 1:length(assault$latitude)){
reg = ((assault$latitude[i]-minlat)/(maxlat-minlat))*24
assault$regiony[i] = floor(reg)
}
#normalize longitude and store as regionx 1 through 25
for (i in 1:length(assault$longitude)){
reg = ((assault$longitude[i]-minlong)/(maxlong-minlong))*24+1
assault$regionx[i] = floor(reg)
}
#create region from regionx and region y
#region should be from 1 to 625 and as (y)*10+x (row major)
for (i in 1:length(assault$regionx)){
assault$region[i]= assault$regionx[i]+(assault$regiony[i])*25
}
assault_counts = array(rep(0,625*7*24),c(625, 7, 24))#region, day of the week, time of day
for (i in 1:625){
for (j in 1:7){
for(k in 1:24){
ix_region = which(assault$region == i)
ix_day=which(assault$reported_dayofwk == days_of_week[j])
ix_hour = which(assault$reported_hour==k-1)
count =length(intersect(ix_region, intersect(ix_day, ix_hour)))
assault_counts[i,j,k]=count
}
}
}
write.csv(assault_counts, file= "AssaultCounts2.csv")
assault[15:17]
assault[,15:17]
assault[,,3]
head(assault)
library(ggmap)
install.packages(ggmap)
install.packages("ggmap")
library(ggmap)
library(mapproj)
map <- get_map(location = 'raleigh, north carolina', zoom = 4)
ggmap(map)
?register_google
library(ggmap)
(map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat)))
ggmap(map)
map
?ggmap
ggmap(map)
ggmap(map, extent = "device") +
geom_density2d(data = rcf, aes(x=LONGITUDE,y=LATITUDE),size = 0.3)
rcf<-read.csv("F://Rprojects/RaleighCrime/25x25 assault model.csv")
library(ggmap)
(map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat)))
ggmap(map, extent = "device") +
geom_density2d(data = rcf, aes(x=LONGITUDE,y=LATITUDE),size = 0.3)
(map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat)))
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3)
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="green",high="red") +
scale_alpha(range = c(0,0.3), guide=FALSE)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="green",high="red") +
scale_alpha(range = c(0,0.3), guide=FALSE)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="blue",high="purple") +
scale_alpha(range = c(0,0.3), guide=FALSE)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="yellow",high="purple") +
scale_alpha(range = c(0,0.3), guide=FALSE)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="yellow",high="red") +
scale_alpha(range = c(0,0.3), guide=FALSE)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="yellow",high="red") +
scale_alpha(range = c(0.1,0.6), guide=FALSE)
map<- get_map(location = c(lon = mean(assault$longitude), lat = mean(assault$latitude)), zoom = 11, maptype = "roadmap", scale = 2)
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="yellow",high="red") +
scale_alpha(range = c(0.1,0.6), guide=FALSE)
minlat = quantile(assault$latitude, .1)
maxlat = quantile(assault$latitude, .9)
minlong = quantile(assault$longitude, .1)
maxlong = quantile(assault$longitude, .9)
library(ggmap)
(map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat)))
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="yellow",high="red") +
scale_alpha(range = c(0.1,0.6), guide=FALSE)
minlat = quantile(assault$latitude, .1)
maxlat = quantile(assault$latitude, .9)
minlong = quantile(assault$longitude, .1)
maxlong = quantile(assault$longitude, .9)
library(ggmap)
(map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat)))
map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat))
ggmap(map, extent = "device") +
geom_density2d(data = assault, aes(x=assault$longitude,y=assault$latitude),size = 0.3) +
stat_density2d(data=assault, aes(x=assault$longitude, y=assault$latitude, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low="yellow",high="red") +
scale_alpha(range = c(0.1,0.6), guide=FALSE)
minlat = quantile(assault$latitude, .3)
maxlat = quantile(assault$latitude, .7)
minlong = quantile(assault$longitude, .2)
maxlong = quantile(assault$longitude, .8)
map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat))
map <- get_map(left = minlong, bottom = minlat, right = maxlong, top = maxlat)
#Set your API Key
ggmap::register_google(key = "AIzaSyCWdZz7UpNsXl-fx0Y80O1yiJZyBn1nF7w")
map <- get_map(left = minlong, bottom = minlat, right = maxlong, top = maxlat)
map <- get_map(c(left = minlong, bottom = minlat, right = maxlong, top = maxlat))
map<-get_map(location = c(lon = mean(assault$longitude), lat = mean(assault$latitude)), zoom = 11, maptype = "roadmap", scale = 2)
map<-get_googlemap(location = c(lon = mean(assault$longitude), lat = mean(assault$latitude)), zoom = 11, maptype = "roadmap", scale = 2)
map<-get_googlemap(center = c(lon = mean(assault$longitude), lat = mean(assault$latitude)), zoom = 11, maptype = "roadmap", scale = 2)
